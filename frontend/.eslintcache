[{"/home/renan/Documentos/UEL/trabalho_bancos_de_dados/frontend/src/index.tsx":"1","/home/renan/Documentos/UEL/trabalho_bancos_de_dados/frontend/src/styles/global.ts":"2","/home/renan/Documentos/UEL/trabalho_bancos_de_dados/frontend/src/routes/index.tsx":"3","/home/renan/Documentos/UEL/trabalho_bancos_de_dados/frontend/src/context/AuthContext.ts":"4","/home/renan/Documentos/UEL/trabalho_bancos_de_dados/frontend/src/pages/Feed/index.tsx":"5","/home/renan/Documentos/UEL/trabalho_bancos_de_dados/frontend/src/pages/Podcast/index.tsx":"6","/home/renan/Documentos/UEL/trabalho_bancos_de_dados/frontend/src/pages/Log/index.tsx":"7","/home/renan/Documentos/UEL/trabalho_bancos_de_dados/frontend/src/pages/UserRegister/styles.ts":"8","/home/renan/Documentos/UEL/trabalho_bancos_de_dados/frontend/src/services/api.ts":"9","/home/renan/Documentos/UEL/trabalho_bancos_de_dados/frontend/src/Components/Header/index.tsx":"10","/home/renan/Documentos/UEL/trabalho_bancos_de_dados/frontend/src/Components/Header/styles.ts":"11","/home/renan/Documentos/UEL/trabalho_bancos_de_dados/frontend/src/Components/CardContainer/styles.ts":"12","/home/renan/Documentos/UEL/trabalho_bancos_de_dados/frontend/src/Components/CardContainer/index.tsx":"13","/home/renan/Documentos/UEL/trabalho_bancos_de_dados/frontend/src/App.tsx":"14","/home/renan/Documentos/UEL/trabalho_bancos_de_dados/frontend/src/pages/PodcastRegister/index.tsx":"15","/home/renan/Documentos/UEL/trabalho_bancos_de_dados/frontend/src/pages/UserLogin/styles.ts":"16","/home/renan/Documentos/UEL/trabalho_bancos_de_dados/frontend/src/pages/Episode/index.tsx":"17","/home/renan/Documentos/UEL/trabalho_bancos_de_dados/frontend/src/pages/Episode/styles.ts":"18","/home/renan/Documentos/UEL/trabalho_bancos_de_dados/frontend/src/reportWebVitals.ts":"19","/home/renan/Documentos/UEL/trabalho_bancos_de_dados/frontend/src/pages/UserRegister/index.tsx":"20","/home/renan/Documentos/UEL/trabalho_bancos_de_dados/frontend/src/pages/PodcastRegister/styles.ts":"21"},{"size":270,"mtime":1618450650300,"results":"22","hashOfConfig":"23"},{"size":387,"mtime":1618450650300,"results":"24","hashOfConfig":"23"},{"size":1281,"mtime":1618773277499,"results":"25","hashOfConfig":"23"},{"size":343,"mtime":1618450650300,"results":"26","hashOfConfig":"23"},{"size":280,"mtime":1618450650300,"results":"27","hashOfConfig":"23"},{"size":11322,"mtime":1619480926070,"results":"28","hashOfConfig":"23"},{"size":19488,"mtime":1619486119073,"results":"29","hashOfConfig":"23"},{"size":1888,"mtime":1618531373624,"results":"30","hashOfConfig":"23"},{"size":114,"mtime":1618450650300,"results":"31","hashOfConfig":"23"},{"size":2017,"mtime":1619479238045,"results":"32","hashOfConfig":"23"},{"size":1197,"mtime":1619478987336,"results":"33","hashOfConfig":"23"},{"size":2395,"mtime":1618532023163,"results":"34","hashOfConfig":"23"},{"size":8143,"mtime":1619481817728,"results":"35","hashOfConfig":"23"},{"size":311,"mtime":1618450650296,"results":"36","hashOfConfig":"23"},{"size":3586,"mtime":1619486817658,"results":"37","hashOfConfig":"23"},{"size":1970,"mtime":1618531376008,"results":"38","hashOfConfig":"23"},{"size":3060,"mtime":1618794809427,"results":"39","hashOfConfig":"23"},{"size":1478,"mtime":1618450650300,"results":"40","hashOfConfig":"23"},{"size":458,"mtime":1618450650300,"results":"41","hashOfConfig":"23"},{"size":3395,"mtime":1618794893637,"results":"42","hashOfConfig":"23"},{"size":1998,"mtime":1618532019831,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"wgb8ig",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"64"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/renan/Documentos/UEL/trabalho_bancos_de_dados/frontend/src/index.tsx",[],"/home/renan/Documentos/UEL/trabalho_bancos_de_dados/frontend/src/styles/global.ts",[],"/home/renan/Documentos/UEL/trabalho_bancos_de_dados/frontend/src/routes/index.tsx",[],"/home/renan/Documentos/UEL/trabalho_bancos_de_dados/frontend/src/context/AuthContext.ts",["91"],"import React, { createContext } from 'react'\n\nexport interface AuthContextData {\n    name: string\n    sex: 'male' | 'female' | 'other'\n    logged: boolean\n    id: string\n    podcastUrl: string\n    setData: (data: AuthContextData) => void\n}\n\nconst AuthContext = createContext<AuthContextData>({} as AuthContextData)\n\nexport default AuthContext\n",[],"/home/renan/Documentos/UEL/trabalho_bancos_de_dados/frontend/src/pages/Feed/index.tsx",[],"/home/renan/Documentos/UEL/trabalho_bancos_de_dados/frontend/src/pages/Podcast/index.tsx",["92","93","94","95","96"],"/home/renan/Documentos/UEL/trabalho_bancos_de_dados/frontend/src/pages/Log/index.tsx",[],"/home/renan/Documentos/UEL/trabalho_bancos_de_dados/frontend/src/pages/UserRegister/styles.ts",[],"/home/renan/Documentos/UEL/trabalho_bancos_de_dados/frontend/src/services/api.ts",[],[],"/home/renan/Documentos/UEL/trabalho_bancos_de_dados/frontend/src/Components/Header/index.tsx",["97","98","99"],"import React, { useContext, useEffect } from 'react'\n\nimport { Button, Container, User, Title } from './styles'\nimport micImage from '../../assets/Mic.png'\nimport AuthContext from '../../context/AuthContext'\nimport { Link } from 'react-router-dom'\n\nconst Header: React.FC = () => {\n    const auth = JSON.parse(localStorage.getItem('auth') || '{}')\n\n    if(auth.logged === true) {\n        return (\n            <Container>\n                <Link to='/'>\n                    <Title>\n                        <img src={micImage} />\n                        <h1>Pode</h1>\n                    </Title>\n                </Link>\n                <Button>\n                    <Link to='/log'>Gráficos</Link>\n                    <Link to='/podcast/register'>Cadastrar Podcast</Link>\n                    <User>\n                        {\n                            auth.sex === 'male' && <p>Bem Vindo de volta</p>\n                        }\n                        {\n                            auth.sex === 'female' && <p>Bem Vinda de volta</p>\n                        }\n                        {\n                            auth.sex === 'other' && <p>Bem Vinde de volta</p>\n                        }\n                        <a href=\"#\">{auth.name}</a>\n                    </User>\n\n                    <a href=\"/\" onClick={() => { localStorage.removeItem('auth') }}>Sair</a>\n                </Button>\n            </Container>\n        )\n    } else {\n        return (\n            <Container>\n                <Link to='/'>\n                    <Title>\n                        <img src={micImage} />\n                        <h1>Pode</h1>\n                    </Title>\n                </Link>\n                <Button>\n                    <a></a>\n                    <a></a>\n                    <Link to='/log'>Gráficos</Link>\n                    <Link to='/user/register'>Cadastrar</Link>\n                    <Link to='/user/login'>Entrar</Link>\n                </Button>\n            </Container>\n        )\n    }\n}\n\nexport default Header\n","/home/renan/Documentos/UEL/trabalho_bancos_de_dados/frontend/src/Components/Header/styles.ts",[],"/home/renan/Documentos/UEL/trabalho_bancos_de_dados/frontend/src/Components/CardContainer/styles.ts",["100"],"/home/renan/Documentos/UEL/trabalho_bancos_de_dados/frontend/src/Components/CardContainer/index.tsx",["101","102"],"import React, { FormEvent, useContext, useEffect, useState } from 'react'\nimport convert from 'xml-js'\nimport ScrollMenu from 'react-horizontal-scrolling-menu'\nimport { FiSearch } from 'react-icons/fi'\n\nimport axios from 'axios'\nimport { Card, CardHeader, Container, TitleContainer, Title, HeaderOption, PodcastCard, PodcastContainer, Search, SearchContainer } from './styles'\nimport heartImg from '../../assets/Heart.png'\nimport headphonesImg from '../../assets/Headphones.png'\nimport AuthContext from '../../context/AuthContext'\nimport api from '../../services/api'\nimport { Link } from 'react-router-dom'\n\ninterface Podcast {\n    id: string\n    image: string\n    url: string\n}\n\nconst CardContainer: React.FC = () => {\n    const [subscribes, setSubscribes] = useState<Podcast[]>([] as Podcast[])\n    const [podcasts, setPodcasts] = useState<Podcast[]>([] as Podcast[])\n    const [allPodcasts, setAllPodcasts] = useState<Podcast[]>([] as Podcast[])\n    const [search, setSearch] = useState('')\n    const auth = JSON.parse(localStorage.getItem('auth') || '{}')\n\n    useEffect(() => {\n        const pods = async () => {\n            const result = await api.get('podcast/')\n            const final = []\n            for(let i = 0; i < result.data.length; i++) {\n                try {\n                    const a = await axios.get(`${ result.data[i].rss_feed }`, {\n                        headers:{'Content-Type': 'application/x-www-form-urlencoded'}\n                    })\n                    const json = JSON.parse(convert.xml2json(a.data, {compact: true, spaces: 4}))\n                    final.push({\n                        id: result.data[i].id,\n                        image: Array.isArray(json.rss.channel.image) ? Object.values(json.rss.channel.image[1].url)[0] as string : Object.values(json.rss.channel.image.url)[0] as string,\n                        url: result.data[i].rss_feed\n                    })\n                } catch(error) {\n                    console.log(error)\n                }\n            }\n\n            setPodcasts(final)\n            setAllPodcasts(final)\n        }\n\n        const subs = async () => {\n            const result = await api.get(`usuario/pegaPodcastsInscritos/${auth.id}`)\n            const final = []\n            for(let i = 0; i < result.data.length; i++) {\n                const a = await axios.get(`${ result.data[i].rss_feed }`, {\n                    headers:{'Content-Type': 'application/x-www-form-urlencoded'}\n                })\n                const json = JSON.parse(convert.xml2json(a.data, {compact: true, spaces: 4}))\n                final.push({\n                    id: result.data[i].id,\n                    image: Array.isArray(json.rss.channel.image) ? Object.values(json.rss.channel.image[1].url)[0] as string : Object.values(json.rss.channel.image.url)[0] as string,\n                    url: result.data[i].rss_feed\n                })\n            }\n\n            setSubscribes(final)\n        }\n\n        pods()\n        if(auth.logged === true) {\n            subs()\n        }\n\n    }, [])\n\n\n    const MenuItem = ({ id, image, url }: Podcast) => {\n        return (\n            <Link to={`/podcast/${id}`} onClick={async () => {\n                localStorage.setItem('auth', JSON.stringify({...auth, podcastUrl: url}))\n                auth.logged && await api.post('/logAcesso/', {\n                    pod_id: id,\n                    usr_id: auth.id\n                })\n            }} >\n                <PodcastCard about={image}/>\n            </Link>\n        )\n    }\n\n    const Menu = (list: Podcast[]): JSX.Element[] =>\n        list.map(el => {\n            const { id, image, url } = el\n\n            return <MenuItem url={url} key={id} id={id} image={image} />\n        })\n\n    function handleChange(value: string,fn: React.Dispatch<React.SetStateAction<string>>) {\n        fn(value)\n    }\n\n    const handleSubmit = async (event: FormEvent<HTMLFormElement>) => {\n        event.preventDefault()\n        if(search==='')\n            return setPodcasts(allPodcasts)\n        const result = await api.get(`podcast/keyword/${search}`)\n        const final = []\n        for(let i = 0; i < result.data.podcast.length; i++) {\n            try {\n                const a = await axios.get(`${ result.data.podcast[i].rss_feed }`, {\n                    headers:{'Content-Type': 'application/x-www-form-urlencoded'}\n                })\n                const json = JSON.parse(convert.xml2json(a.data, {compact: true, spaces: 4}))\n                final.push({\n                    id: result.data.podcast[i].id,\n                    image: Array.isArray(json.rss.channel.image) ? Object.values(json.rss.channel.image[1].url)[0] as string : Object.values(json.rss.channel.image.url)[0] as string,\n                    url: result.data.podcast[i].rss_feed\n                })\n            } catch(error) {\n                console.log(error)\n            }\n        }\n\n        setPodcasts(final)\n    }\n\n    return (\n        <Container>\n            {\n                (auth.logged === true && subscribes.length > 0) && (\n                    <Card>\n                        <CardHeader>\n                            <TitleContainer>\n                                <img src={heartImg}/>\n                                <Title>\n                                    <h1>Suas Inscrições</h1>\n                                    <p>Você está inscrito em {subscribes.length} podcasts</p>\n                                </Title>\n                            </TitleContainer>\n                            <HeaderOption/>\n                        </CardHeader>\n                        <PodcastContainer>\n                            {\n                                subscribes[0] && (\n                                    <ScrollMenu\n                                        alignCenter={false}\n                                        clickWhenDrag={false}\n                                        data={Menu(subscribes)}\n                                        dragging={true}\n                                        transition={+0.3}\n                                        translate={0}\n                                        wheel={true}\n                                        wrapperStyle={{\n                                            overflow: 'hidden'\n                                        }}\n                                    />\n                                )\n                            }\n                        </PodcastContainer>\n                    </Card>\n                )\n            }\n            <Card>\n                <CardHeader>\n                    <TitleContainer>\n                        <img src={headphonesImg}/>\n                        <Title>\n                            <h1>Feed de Podcasts</h1>\n                            <p>{podcasts.length} podcasts cadastrados</p>\n                        </Title>\n                    </TitleContainer>\n                    <SearchContainer>\n                        <Search onSubmit={(event) => handleSubmit(event)}>\n                            <button type='submit'>\n                                <FiSearch color='#fff' size='2vw'></FiSearch>\n                            </button>\n                            <input value={search} onChange={ (event) => handleChange(event.target.value, setSearch) } placeholder='Procurar Podcast' />\n                        </Search>\n                    </SearchContainer>\n                    <HeaderOption/>\n                </CardHeader>\n                {\n                    podcasts[0] && (\n                        <ScrollMenu\n                            alignCenter={false}\n                            clickWhenDrag={false}\n                            data={Menu(podcasts)}\n                            dragging={true}\n                            transition={+0.3}\n                            translate={0}\n                            wheel={true}\n                            wrapperStyle={{\n                                overflow: 'hidden'\n                            }}\n                        />\n                    )\n                }\n            </Card>\n        </Container>\n    )\n\n}\n\nexport default CardContainer\n","/home/renan/Documentos/UEL/trabalho_bancos_de_dados/frontend/src/App.tsx",[],"/home/renan/Documentos/UEL/trabalho_bancos_de_dados/frontend/src/pages/PodcastRegister/index.tsx",[],"/home/renan/Documentos/UEL/trabalho_bancos_de_dados/frontend/src/pages/UserLogin/styles.ts",[],"/home/renan/Documentos/UEL/trabalho_bancos_de_dados/frontend/src/pages/Episode/index.tsx",["103","104","105","106","107"],"/home/renan/Documentos/UEL/trabalho_bancos_de_dados/frontend/src/pages/Episode/styles.ts",[],"/home/renan/Documentos/UEL/trabalho_bancos_de_dados/frontend/src/reportWebVitals.ts",["108"],"/home/renan/Documentos/UEL/trabalho_bancos_de_dados/frontend/src/pages/UserRegister/index.tsx",["109","110"],"/home/renan/Documentos/UEL/trabalho_bancos_de_dados/frontend/src/pages/PodcastRegister/styles.ts",[],{"ruleId":"111","severity":1,"message":"112","line":1,"column":8,"nodeType":"113","messageId":"114","endLine":1,"endColumn":13},{"ruleId":"111","severity":1,"message":"115","line":1,"column":28,"nodeType":"113","messageId":"114","endLine":1,"endColumn":38},{"ruleId":"111","severity":1,"message":"116","line":13,"column":8,"nodeType":"113","messageId":"114","endLine":13,"endColumn":19},{"ruleId":"117","severity":1,"message":"118","line":74,"column":68,"nodeType":"119","messageId":"120","endLine":74,"endColumn":71,"suggestions":"121"},{"ruleId":"117","severity":1,"message":"118","line":96,"column":68,"nodeType":"119","messageId":"120","endLine":96,"endColumn":71,"suggestions":"122"},{"ruleId":"117","severity":1,"message":"118","line":150,"column":59,"nodeType":"119","messageId":"120","endLine":150,"endColumn":62,"suggestions":"123"},{"ruleId":"111","severity":1,"message":"115","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":27},{"ruleId":"111","severity":1,"message":"124","line":1,"column":29,"nodeType":"113","messageId":"114","endLine":1,"endColumn":38},{"ruleId":"111","severity":1,"message":"116","line":5,"column":8,"nodeType":"113","messageId":"114","endLine":5,"endColumn":19},{"ruleId":"111","severity":1,"message":"125","line":2,"column":10,"nodeType":"113","messageId":"114","endLine":2,"endColumn":15},{"ruleId":"111","severity":1,"message":"115","line":1,"column":28,"nodeType":"113","messageId":"114","endLine":1,"endColumn":38},{"ruleId":"111","severity":1,"message":"116","line":10,"column":8,"nodeType":"113","messageId":"114","endLine":10,"endColumn":19},{"ruleId":"111","severity":1,"message":"115","line":1,"column":38,"nodeType":"113","messageId":"114","endLine":1,"endColumn":48},{"ruleId":"111","severity":1,"message":"116","line":6,"column":8,"nodeType":"113","messageId":"114","endLine":6,"endColumn":19},{"ruleId":"111","severity":1,"message":"126","line":7,"column":8,"nodeType":"113","messageId":"114","endLine":7,"endColumn":11},{"ruleId":"111","severity":1,"message":"127","line":42,"column":40,"nodeType":"113","messageId":"114","endLine":42,"endColumn":49},{"ruleId":"111","severity":1,"message":"128","line":47,"column":24,"nodeType":"113","messageId":"114","endLine":47,"endColumn":30},{"ruleId":"129","severity":1,"message":"130","line":3,"column":25,"nodeType":"131","messageId":"132","endLine":3,"endColumn":57},{"ruleId":"111","severity":1,"message":"115","line":1,"column":28,"nodeType":"113","messageId":"114","endLine":1,"endColumn":38},{"ruleId":"111","severity":1,"message":"116","line":5,"column":8,"nodeType":"113","messageId":"114","endLine":5,"endColumn":19},"@typescript-eslint/no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'useContext' is defined but never used.","'AuthContext' is defined but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["133","134"],["135","136"],["137","138"],"'useEffect' is defined but never used.","'shade' is defined but never used.","'api' is defined but never used.","'podcastId' is defined but never used.","'userId' is assigned a value but never used.","@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType",{"messageId":"139","fix":"140","desc":"141"},{"messageId":"142","fix":"143","desc":"144"},{"messageId":"139","fix":"145","desc":"141"},{"messageId":"142","fix":"146","desc":"144"},{"messageId":"139","fix":"147","desc":"141"},{"messageId":"142","fix":"148","desc":"144"},"suggestUnknown",{"range":"149","text":"150"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"149","text":"151"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"152","text":"150"},{"range":"152","text":"151"},{"range":"153","text":"150"},{"range":"153","text":"151"},[2543,2546],"unknown","never",[3975,3978],[5839,5842]]